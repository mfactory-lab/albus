/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category VerifyProof
 * @category generated
 */
export const verifyProofStruct = new beet.BeetArgsStruct<{
  instructionDiscriminator: number[] /* size: 8 */
}>(
  [['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)]],
  'VerifyProofInstructionArgs',
)

/**
 * Accounts required by the _verifyProof_ instruction
 *
 * @property [_writable_, **signer**] authority
 * @category Instructions
 * @category VerifyProof
 * @category generated
 */
export interface VerifyProofInstructionAccounts {
  authority: web3.PublicKey
  systemProgram?: web3.PublicKey
  anchorRemainingAccounts?: web3.AccountMeta[]
}

export const verifyProofInstructionDiscriminator = [
  217, 211, 191, 110, 144, 13, 186, 98,
]

/**
 * Creates a _VerifyProof_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @category Instructions
 * @category VerifyProof
 * @category generated
 */
export function createVerifyProofInstruction(
  accounts: VerifyProofInstructionAccounts,
  programId = new web3.PublicKey('8Q3WDsNM7cBy7xSXqZMhR2LzGfGKgYAdWWLPKpj9orJb'),
) {
  const [data] = verifyProofStruct.serialize({
    instructionDiscriminator: verifyProofInstructionDiscriminator,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.authority,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: accounts.systemProgram ?? web3.SystemProgram.programId,
      isWritable: false,
      isSigner: false,
    },
  ]

  if (accounts.anchorRemainingAccounts != null) {
    for (const acc of accounts.anchorRemainingAccounts) {
      keys.push(acc)
    }
  }

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
