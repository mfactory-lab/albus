/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import type { PolicyRule } from './PolicyRule'
import { policyRuleBeet } from './PolicyRule'

export interface UpdatePolicyData {
  name: beet.COption<string>
  description: beet.COption<string>
  expirationPeriod: beet.COption<number>
  retentionPeriod: beet.COption<number>
  rules: beet.COption<PolicyRule[]>
}

/**
 * @category userTypes
 * @category generated
 */
export const updatePolicyDataBeet
  = new beet.FixableBeetArgsStruct<UpdatePolicyData>(
    [
      ['name', beet.coption(beet.utf8String)],
      ['description', beet.coption(beet.utf8String)],
      ['expirationPeriod', beet.coption(beet.u32)],
      ['retentionPeriod', beet.coption(beet.u32)],
      ['rules', beet.coption(beet.array(policyRuleBeet))],
    ],
    'UpdatePolicyData',
  )
