/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import type * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import type { ContactInfo } from './ContactInfo'
import { contactInfoBeet } from './ContactInfo'

export interface CreateServiceProviderData {
  code: string
  name: string
  website: string
  contactInfo: beet.COption<ContactInfo>
  authority: beet.COption<web3.PublicKey>
  secretShareThreshold: beet.COption<number>
  trustees: beet.COption<web3.PublicKey[]>
}

/**
 * @category userTypes
 * @category generated
 */
export const createServiceProviderDataBeet
  = new beet.FixableBeetArgsStruct<CreateServiceProviderData>(
    [
      ['code', beet.utf8String],
      ['name', beet.utf8String],
      ['website', beet.utf8String],
      ['contactInfo', beet.coption(contactInfoBeet)],
      ['authority', beet.coption(beetSolana.publicKey)],
      ['secretShareThreshold', beet.coption(beet.u8)],
      ['trustees', beet.coption(beet.array(beetSolana.publicKey))],
    ],
    'CreateServiceProviderData',
  )
