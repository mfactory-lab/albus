/*
 * This file is part of Albus code.
 *
 * Copyright (c) 2023, mFactory GmbH
 *
 * Albus is free software: you can redistribute it
 * and/or modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * Albus is distributed in the hope that it
 * will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.
 * If not, see <https://www.gnu.org/licenses/agpl-3.0.html>.
 *
 * You can be released from the requirements of the Affero GNU General Public License
 * by purchasing a commercial license. The purchase of such a license is
 * mandatory as soon as you develop commercial activities using the
 * Albus code without disclosing the source code of
 * your own applications.
 *
 * The developer of this program can be contacted at <info@albus.finance>.
 */

import { describe, it } from 'vitest'
import { getSignals } from '../src/utils'

describe('sdk.utils', () => {
  it('can load inputs', async () => {
    const result = getSignals(
      [
        'encryptedData[4]',
        'encryptedShare[3][4]',
        'currentDate',
        'minAge',
        'maxAge',
        'credentialRoot',
        'birthDateProof[6]',
        'birthDateKey',
        'issuerPk[2]',
        'issuerSignature[3]',
        'trusteePublicKey[3][2]',
      ],
      [
        '9870872389907743520480264772184617932814544222789296514909279435808204415435',
        '7063651488046742167134275333189587443680778706004252673865640694571211354187',
        '6164010886485507166761189708841969098800077052800114552222403692537854527849',
        '19958709119133418220208389221334132214556673309684943408629095277792614690244',
        '18529402859272019307499138133470125191096245301627877249354922135687498271020',
        '8978935555679638269683545090549595935575796369889182597614773431486015598866',
        '10238260208908248447105880164051408796969738239919599565538161147284470643154',
        '18945485382616442159558202556232004744963648570553779053118148286651196121863',
        '13352535325206902356535121644246416915745237105718540318476672019606381601410',
        '14081946369669743298445123873509921466235331278202961517134190496080268088619',
        '13772797050986267525220591276618333931796856119306054122759969854387138132241',
        '20913576208511164264922267660048255661075346998627948024776734748737569077450',
        '8833919640575626152392349343687240188325236803499347851327564316939465114289',
        '549156034969917335821519187995410734713163065280479366658912200301497498928',
        '9725868237351414882977954706949997842643474406585172602654871726466466747532',
        '12901315712911773249877332425426952574521618326706468425637808382908103477931',
        '20230913',
        '18',
        '100',
        '11077866633106981791340789987944870806147307639065753995447310137530607758623',
        '353086023020879629087888673454917369147465163855843886593149553676241948357',
        '495667492475991330422281750651009254772949868345543114298160384197425362394',
        '0',
        '0',
        '0',
        '0',
        '0',
        '20841523997579262969290434121704327723902935194219264790567899027938554056663',
        '20678780156819015018034618985253893352998041677807437760911245092739191906558',
        '21153906701456715004295579276500758430977318622340395655171725984189489403836',
        '15484492519285437260388749074045005694239822857741052851485555393361224949130',
        '1662767948258934355069791443487100820038153707701411290986741440889424297316',
        '10885792365768413512549137804369875890192886096824764050339743446850762666830',
        '18443998972794771015978762894530054175226445818224747958633003674888657861829',
        '8706538838365149043121267870197625713239344563453285454504122370108741354322',
        '3125938722042305256064640820346908434199259039827584871282850530839914592940',
        '18123300727908180862256333327385566694439949351015808800158793639378016508119',
        '2495439321268858870231666794271485494097392787365591328402153416743417170449',
      ].map(BigInt),
    )

    console.log(result)
  })
})
