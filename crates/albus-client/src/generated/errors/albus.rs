//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! <https://github.com/kinobi-so/kinobi>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum AlbusError {
    /// 6000 - Unauthorized action
    #[error("Unauthorized action")]
    Unauthorized = 0x1770,
    /// 6001 - Unverified
    #[error("Unverified")]
    Unverified = 0x1771,
    /// 6002 - Unproved
    #[error("Unproved")]
    Unproved = 0x1772,
    /// 6003 - Expired
    #[error("Expired")]
    Expired = 0x1773,
    /// 6004 - Invalid data
    #[error("Invalid data")]
    InvalidData = 0x1774,
    /// 6005 - Invalid owner
    #[error("Invalid owner")]
    InvalidOwner = 0x1775,
    /// 6006 - Invalid metadata
    #[error("Invalid metadata")]
    InvalidMetadata = 0x1776,
    /// 6007 - Proof verification failed
    #[error("Proof verification failed")]
    ProofVerificationFailed = 0x1777,
    /// 6008 - Invalid public inputs
    #[error("Invalid public inputs")]
    InvalidPublicInputs = 0x1778,
}

impl solana_program::program_error::PrintProgramError for AlbusError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}

